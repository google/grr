@use '@angular/material' as mat;
@use '../../material-theme' as c;

.container {
  // This allows using "position: absolute" in plugins implementation (used
  // for positioning additional flow controls with the
  // flow-details-summary-actions class.
  position: relative;

  padding: 0;
  background-color: mat.get-color-from-palette(c.$background, app-bar);
  border: 1px solid mat.get-color-from-palette(c.$foreground, divider-light);
  border-radius: 8px;
  overflow: hidden;

  .header {
    padding: 18px 0 18px 24px;
    display: flex;
    align-items: center;

    mat-icon {
      vertical-align: middle;
    }

    .flow-title {
      font-size: 105%;
    }

    .col-left {
      display: flex;
      flex-direction: column;
      align-items: flex-start;
    }

    .flow-id {
      font-size: 10px;
      color: mat.get-color-from-palette(c.$foreground, text-light);
    }

    app-timestamp {
      white-space: nowrap;
    }

    .export-button,
    .result-description {
      margin-left: c.$container-padding;
    }

    .result-description {
      color: mat.get-color-from-palette(c.$foreground, text-light);
    }

    .flow-info {
      flex-grow: 1;
      padding-left: 3em;
      padding-top: 2px;
      font-size: 85%;
      color: mat.get-color-from-palette(c.$foreground, text-light);
    }

    .error {
      color: mat.get-color-from-palette(c.$foreground, danger);
    }

    .flow-status {
      padding-left: 50px;
      width: 180px;

      mat-icon {
        font-size: 20px;
        width: 20px;
        padding-right: 10px;
      }

      mat-spinner {
        padding-right: 10px;
      }

      .mat-progress-spinner::ng-deep circle {
        stroke: mat.get-color-from-palette(c.$foreground, success);
      }

      .flow-status-span {
        display: inline-flex;
      }

      .success,
      .in-progress {
        color: mat.get-color-from-palette(c.$foreground, success);
      }
    }

    .menu-button {
      .menu-icon {
        opacity: 0.2;
        font-size: 250%;
        position: relative;
        left: -5.5px;
      }
    }
  }

  .flow-args {
    padding: 18px 24px;
  }

  .error-description-container {
    color: mat.get-color-from-palette(c.$foreground, danger-light);
    padding: 0 c.$card-margin;
    white-space: break-spaces;
    overflow-wrap: break-word;
  }
}
