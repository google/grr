syntax = "proto2";

import "google/protobuf/any.proto";
import "grr_response_proto/jobs.proto";
import "grr_response_proto/semantic.proto";

package grr;

// Proto representation of an ArtifactSource.
message ArtifactSource {
  reserved 4;

  enum SourceType {
    reserved 5, 7, 40, 41, 42, 43, 46;

    COLLECTOR_TYPE_UNKNOWN = 0;
    FILE = 1;
    REGISTRY_KEY = 2;
    REGISTRY_VALUE = 3;
    WMI = 4;
    PATH = 6;
    ARTIFACT_GROUP = 8;
    COMMAND = 45;
  }

  optional SourceType type = 1 [(sem_type) = {
    description: "The type of source.",
  }];

  optional Dict attributes = 2 [(sem_type) = {
    description: "The attributes that describe the source. e.g. file paths.",
  }];

  repeated string conditions = 3 [(sem_type) = {
    description: "Object filter conditions that decide if this source"
                 " applies to a given system.",
  }];

  repeated string supported_os = 5 [(sem_type) = {
    description: "A list of operating systems to which this source should be "
                 "applied.",
  }];
}

// Proto representation of an artifact.
message Artifact {
  optional string name = 1 [(sem_type) = {
    description: "Globally unique name of the artifact.",
    type: "ArtifactName",
  }];

  repeated string conditions = 2 [(sem_type) = {
    description: "A list of conditions that decide if the artifact should "
                 "run.",
  }];

  optional string doc = 3 [(sem_type) = {
    description: "Doc string for the artifact.",
  }];

  reserved 4;
  reserved "labels";

  repeated string supported_os = 5 [(sem_type) = {
    description: "A list of operating systems the artifact supports.",
  }];

  repeated string urls = 6 [(sem_type) = {
    description: "A list of urls that help document the artifact.",
  }];

  /* Deprecated
  repeated Collector collectors = 7 [(sem_type) = {
    description: "A list of artifact collectors.",
  }]; */

  reserved 8;
  reserved "provides";

  repeated ArtifactSource sources = 9 [(sem_type) = {
    description: "A list of artifact sources.",
  }];

  // TODO(hanuszczak): This field should be removed, it does not belong to the
  // artifact definition.
  optional string error_message = 10 [(sem_type) = {
    description: "The error message for artifacts that failed validation."
  }];

  repeated string aliases = 11 [(sem_type) = {
    description: "A list of alternate names.",
  }];
}

message ArtifactDescriptor {
  optional Artifact artifact = 1
      [(sem_type) = { description: "Artifact itself." }];
  repeated string dependencies = 2 [
    (sem_type) = { description: "Names of artifacts this artifact depends on." }
  ];
  repeated string path_dependencies = 3 [(sem_type) = {
    description: "Names of KB objects this artifact depends on."
  }];
  reserved 5;
  optional bool is_custom = 6 [(sem_type) = {
    description: "If True, this artifact was manually uploaded by the user."
  }];
  optional string error_message = 7 [(sem_type) = {
    description: "The error message for artifacts that failed validation."
  }];
}

message ClientActionResult {
  optional string type = 11
      [(sem_type) = { description: "The type of the client action result." }];
  optional google.protobuf.Any value = 12 [(sem_type) = {
    description: "The value of the response."
    dynamic_type: "GetValueClass"
  }];
}
