syntax = "proto2";

package grr;

import "grr_response_proto/jobs.proto";

// Input arguments of the action for large file collection.
message CollectLargeFileArgs {
  // A path specification of the file to collect.
  //
  // Note that only a very limited subset of path specification is supported and
  // many features will not work (e.g. recursion, offsets) and alike.
  optional PathSpec path_spec = 1;

  // A Google Cloud Storage signed URL [1] where the file should be stored.
  //
  // The issuer of the signed URL should ensure its validity during the time
  // intended for the file upload process.
  //
  // [1]: https://cloud.google.com/storage/docs/access-control/signed-urls
  optional string signed_url = 2;

  // A key used to encrypt the uploaded file.
  //
  // The upload procedure utilizes authenticated encryption [1] using the AES
  // algorithm [2] and the GCM mode [3]. The exact details of the format of the
  // encrypted file can be found in the documentation for the AEAD module.
  //
  // [1]: https://en.wikipedia.org/wiki/Authenticated_encryption
  // [2]: https://en.wikipedia.org/wiki/Advanced_Encryption_Standard
  // [3]: https://en.wikipedia.org/wiki/Galois/Counter_Mode
  optional bytes encryption_key = 3;
}

// Output that the large file collection action returns upon initialization.
//
// Progress updates and transfer errors will not be reported in GRR and
// should be supervised by other means.
message CollectLargeFileResult {
  // A session URI for the resumable upload process [1].
  //
  // This URI should be used to monitor the status and progress of the file
  // transfer. It can be also utilized for canceling the procedure if needed.
  //
  // [1]: https://cloud.google.com/storage/docs/resumable-uploads#session-uris
  optional string session_uri = 1;

  // Number of bytes sent, only set after the upload completed.
  optional uint64 total_bytes_sent = 2;
}

// Input arguments for the large file collection flow.
message CollectLargeFileFlowArgs {
  // A path specification of the file to collect.
  //
  // See documentation for the action arguments for more detailed information
  // about supported path types and features.
  optional PathSpec path_spec = 1;

  // A Google Cloud Storage signed URL where the file should be stored.
  //
  // See documentation for the action arguments for more detailed information
  // about signed URLs.
  optional string signed_url = 2;
}

// Output of a large file collection flow.
//
// Session URI will be available after upload started, file size after upload
// finished.
message CollectLargeFileFlowResult {
  // A session URI for the resumable upload process [1].
  //
  // This URI should be used to monitor the status and progress of the file
  // transfer. It can be also utilized for canceling the procedure if needed.
  //
  // [1]: https://cloud.google.com/storage/docs/resumable-uploads#session-uris
  optional string session_uri = 1;

  // Total number of content bytes sent to Google Cloud Storage.
  //
  // Only available after the upload completed.
  optional uint64 total_bytes_sent = 2;
}

// Progress of a large file collection flow.
//
// Session URI is sent to the UI via a progress update after the file upload
// started.
// This URI can be used to monitor the status and progress of the file
// transfer. It can be also utilized for canceling the procedure if needed.
//
// [1]: https://cloud.google.com/storage/docs/resumable-uploads#session-uris
message CollectLargeFileFlowProgress {
  optional string session_uri = 1;
}
