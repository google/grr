env:
  global:
    - GCS_BUCKET=autobuilds.grr-response.com
    - GCS_BUCKET_OPENAPI=autobuilds-grr-openapi
    - CLOUDSDK_CORE_DISABLE_PROMPTS=1
    - APPVEYOR_ACCOUNT_NAME=grr
    - APPVEYOR_WINDOWS_TEMPLATES_SLUG=grr-5wmt5
    - APPVEYOR_E2E_TESTS_SLUG=grr
    - APPVEYOR_DOCKER_BUILD_SLUG=grr-iqgqm
    - SERVICE_FILE_ENCRYPTION_KEY_VAR="encrypted_38884bbe6880_key"
    - SERVICE_FILE_ENCRYPTION_IV_VAR="encrypted_38884bbe6880_iv"
    - secure: "ZE2WGDHnMX3QcLS9XNjgaC0q+Vy9mjDGdvkKd+IExUdRe8bcPNe0sLxL7G5FnkbBZQTydUpD/EDgT9dCAbBH22PfgO/J4KfM445NYVNWC3tTeZ6L2jYuVfu3xnGp6GyBGIrj8zLb1Mv1AhQL1vRwo8dsCDptY7bWH4sFnZlocDo="

matrix:
  include:
    # 64-bit deb builds
    - os: linux
      dist: xenial
      language: python
      python: 3.6
      addons:
        apt:
          packages:
            - fakeroot
            - debhelper
            - libffi-dev
            - libssl-dev
            - python-dev
        chrome: stable
      env:
        - GCS_TAG=ubuntu_64bit
      before_install:
        - virtualenv "${HOME}/GCS_VENV"
        - ${HOME}/GCS_VENV/bin/pip install google-cloud-storage absl-py
        - virtualenv "${HOME}/INSTALL"
      install:
        - travis/install_client_builder.sh
      script:
        - source "${HOME}/INSTALL/bin/activate"
        - travis/build_templates.sh
        - >-
          ${HOME}/GCS_VENV/bin/python
          travis/upload_build_results_to_gcs.py
          --alsologtostderr
          --encrypted_service_key="${PWD}/travis/travis_uploader_service_account.json.enc"
          --build_results_dir="${PWD}/gcs_upload_dir/"

    # OSX builds
    - os: osx
      env:
        - GCS_TAG=osx
      before_install:
        - git clone https://github.com/MacPython/terryfy
        - source terryfy/travis_tools.sh
        - get_python_environment macpython 3.7.3 "${HOME}/GCS_VENV"
        - ${HOME}/GCS_VENV/bin/pip install google-cloud-storage absl-py
        - get_python_environment macpython 3.6.8 "${HOME}/INSTALL"
      install:
        - travis/install_client_builder.sh
      script:
        - source "${HOME}/INSTALL/bin/activate"
        - travis/build_templates.sh
        - >-
          ${HOME}/GCS_VENV/bin/python
          travis/upload_build_results_to_gcs.py
          --alsologtostderr
          --encrypted_service_key="${PWD}/travis/travis_uploader_service_account.json.enc"
          --build_results_dir="${PWD}/gcs_upload_dir/"

    # 64-bit Centos 7 docker container inside an Ubuntu host, for rpm builds
    - os: linux
      dist: xenial
      language: python
      python: 3.6
      services:
        - docker
      env:
        - GCS_TAG=centos_64bit
        - DOCKER_IMG=grrdocker/centos7
        - DOCKER_CONTAINER=centos_64bit_container
        - DOCKER_USER=grrbot
      before_install:
        - virtualenv "${HOME}/GCS_VENV"
        - ${HOME}/GCS_VENV/bin/pip install google-cloud-storage absl-py
        # Create a Docker container which mounts the GRR repo in the
        # /mnt directory
        - >-
          sudo docker run -dit
          --volume "${PWD}:/mnt/grr"
          --workdir /mnt/grr
          --env DOCKER_USER="${DOCKER_USER}"
          --env TRAVIS_OS_NAME="${TRAVIS_OS_NAME}"
          --name "${DOCKER_CONTAINER}"
          "${DOCKER_IMG}"
        - sudo docker exec "${DOCKER_CONTAINER}" travis/set_up_test_user.sh
        - >-
          sudo docker exec --user "${DOCKER_USER}" "${DOCKER_CONTAINER}"
          /usr/local/bin/python3.6 -m venv "/home/${DOCKER_USER}/INSTALL"
      install:
        - >-
          sudo docker exec --user "${DOCKER_USER}" "${DOCKER_CONTAINER}"
          travis/install_client_builder.sh
      script:
        - >-
          sudo docker exec --user "${DOCKER_USER}" "${DOCKER_CONTAINER}"
          travis/build_templates.sh
        # Test installing the built rpm (as root)
        - sudo docker exec "${DOCKER_CONTAINER}" rpm -vih gcs_upload_dir/*.rpm
        - >-
          ${HOME}/GCS_VENV/bin/python
          travis/upload_build_results_to_gcs.py
          --alsologtostderr
          --encrypted_service_key="${PWD}/travis/travis_uploader_service_account.json.enc"
          --build_results_dir="${PWD}/gcs_upload_dir/"

    # Equivalent to the Centos job above, but builds templates that can be
    # installed on Centos 6.
    - os: linux
      dist: xenial
      language: python
      python: 3.6
      services:
        - docker
      env:
        - GCS_TAG=centos6_64bit
        - DOCKER_IMG=grrdocker/centos6
        - DOCKER_CONTAINER=centos6_64bit_container
        - DOCKER_USER=grrbot
      before_install:
        - virtualenv "${HOME}/GCS_VENV"
        - ${HOME}/GCS_VENV/bin/pip install google-cloud-storage absl-py
        # Create a Docker container which mounts the GRR repo in the
        # /mnt directory
        - >-
          sudo docker run -dit
          --volume "${PWD}:/mnt/grr"
          --workdir /mnt/grr
          --env DOCKER_USER="${DOCKER_USER}"
          --env TRAVIS_OS_NAME="${TRAVIS_OS_NAME}"
          --name "${DOCKER_CONTAINER}"
          "${DOCKER_IMG}"
        - sudo docker exec "${DOCKER_CONTAINER}" travis/set_up_test_user.sh
        - >-
          sudo docker exec --user "${DOCKER_USER}" "${DOCKER_CONTAINER}"
          /usr/local/bin/python3.6 -m venv "/home/${DOCKER_USER}/INSTALL"
        - >-
          sudo docker exec "${DOCKER_CONTAINER}"
          yum remove -y sqlite-devel || true
        - >-
          sudo docker exec "${DOCKER_CONTAINER}"
          curl -s -o /etc/yum.repos.d/devtools-2.repo
          https://people.centos.org/tru/devtools-2/devtools-2.repo
        - >-
          sudo docker exec "${DOCKER_CONTAINER}"
          yum install -y
          devtoolset-2-gcc devtoolset-2-binutils
          devtoolset-2-gcc-c++
      install:
        - >-
          sudo docker exec --user "${DOCKER_USER}" "${DOCKER_CONTAINER}"
          scl enable devtoolset-2 travis/install_client_builder.sh
      script:
        - >-
          sudo docker exec --user "${DOCKER_USER}" "${DOCKER_CONTAINER}"
          scl enable devtoolset-2 travis/build_templates.sh
        - >-
          ${HOME}/GCS_VENV/bin/python
          travis/upload_build_results_to_gcs.py
          --alsologtostderr
          --encrypted_service_key="${PWD}/travis/travis_uploader_service_account.json.enc"
          --build_results_dir="${PWD}/gcs_upload_dir/"

    - os: linux
      dist: bionic
      env:
        - GCS_TAG=server_deb
      before_install:
        - >-
          sudo apt-get install -y fakeroot debhelper libffi-dev libssl-dev
          python3-dev python3-pip python3-venv wget openjdk-8-jdk zip git
          devscripts dh-systemd libmysqlclient-dev dh-virtualenv dh-make
          libc6-i386 lib32z1
        - sudo -i pip3 install --upgrade setuptools
        - python3 -m venv "${HOME}/INSTALL"
        - ${HOME}/INSTALL/bin/python -m pip install --upgrade pip setuptools
        - python3 -m venv "${HOME}/GCS_VENV"
        - ${HOME}/GCS_VENV/bin/python -m pip install google-cloud-storage absl-py
      install:
        - travis/install.sh
      script:
        - >-
          travis/fetch_client_templates.sh &&
          travis/build_local_pyindex.sh &&
          travis/build_api_documentation.sh "${HOME}/generated_description/openapi_description.json" "${HOME}/generated_documentation/openapi_documentation.html" &&
          travis/build_server_deb.sh
        - >-
          ${HOME}/GCS_VENV/bin/python
          travis/upload_build_results_to_gcs.py
          --alsologtostderr
          --encrypted_service_key="${PWD}/travis/travis_uploader_service_account.json.enc"
          --build_results_dir="${PWD}/gcs_upload_dir/"
          --openapi_json_dir="${HOME}/generated_description"
          --openapi_docs_dir="${HOME}/generated_documentation"

cache:
  directories:
    - $HOME/.cache/pip
