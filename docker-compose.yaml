services:
  db:
    image: mysql:8.2
    env_file: docker/.env
    container_name: grr-db
    hostname: mysql-host
    command: [
      --max_allowed_packet=40M,
      --log_bin_trust_function_creators=1
    ]
    restart: always
    volumes:
      - ./docker_config_files/mysql/init.sh:/docker-entrypoint-initdb.d/init.sh
      - db_data:/var/lib/mysql:rw
    ports:
      - "3306" 
    expose:
      - "3306"
    networks:
      - server-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 5s
      retries: 10

  grr-admin-ui:
    build:
      dockerfile: Dockerfile.base
      context: .
    container_name: grr-admin-ui
    hostname: admin-ui
    restart: always
    depends_on: 
      db:
        condition: service_healthy
    volumes:
      - ./docker_config_files/server:/configs/
    ports:
      - "8000"
      - "8080"
    expose:
      - 8080
      - 8000
    networks:
      - server-network
    tty: true
    stdin_open: true
    command:
      - -component
      - admin_ui
      - -config 
      - /configs/grr.server.yaml
      - --verbose

  grr-fleetspeak-frontend:
    build:
      dockerfile: Dockerfile.base
      context: .
    container_name: grr-fleetspeak-frontend
    hostname: grr-fleetspeak-frontend
    depends_on: 
      db:
        condition: service_healthy
    volumes:
      - ./docker_config_files/server/:/configs/
    ports:
      - "11111"
    restart: always
    stdin_open: true
    tty: true
    networks:
      - server-network
    command:
      - -component
      - frontend
      - -config 
      - /configs/grr.server.yaml
      - --verbose

  fleetspeak-admin:
    image: ghcr.io/google/fleetspeak:master
    container_name: fleetspeak-admin
    hostname: fleetspeak-admin
    depends_on: 
      db:
        condition: service_healthy
    networks:
      - server-network
    ports:
      - "4444"
    volumes:
      - ./docker_config_files/server/:/configs/
    stdin_open: true
    tty: true
    entrypoint: [
      "server", 
      "-components_config",
      "/configs/admin.components.config",
      "-services_config", 
      "/configs/grr_frontend.service",
      "-alsologtostderr",
      "-v",
      "1000"
    ]

  fleetspeak-frontend:
    image: ghcr.io/google/fleetspeak:master
    container_name: fleetspeak-frontend
    hostname: fleetspeak-frontend
    depends_on: 
      db:
        condition: service_healthy
    networks:
      - server-network
    ports: 
      - "4443"
    volumes:
      - ./docker_config_files/server/:/configs/
    entrypoint: [
      "server", 
      "-components_config",
      "/configs/frontend.components.config",
      "-services_config", 
      "/configs/grr_frontend.service",
      "-alsologtostderr",
      "-v",
      "1000"
    ]

  grr-worker:
    build:
      dockerfile: Dockerfile.base
      context: .
    container_name: grr-worker
    volumes:
      - ./docker_config_files/server/:/configs/
    hostname: grr-worker
    depends_on: 
      db:
        condition: service_healthy
    restart: always
    stdin_open: true
    tty: true
    networks:
      - server-network
    command:
      - -component
      - worker
      - -config 
      - /configs/grr.server.yaml
      - --verbose

  # linux-client:
  #   build:
  #     dockerfile: docker/client/Dockerfile.linux
  #   container_name: grr-linux-client
  #   restart: always
  #   depends_on: 
  #     - db
  #     - fleetspeak-frontend
  #   volumes:
  #     - installers/:/installers/
  #   tty: true
  #   stdin_open: true
  #   networks:
  #     - server-network
  #   entrypoint: /entrypoint.sh

volumes:
  db_data:
  installers:
networks:
  server-network:

