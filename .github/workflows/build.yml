name: Build
on: [push, pull_request]
env:
  GCS_BUCKET: autobuilds.grr-response.com
  GCS_BUCKET_OPENAPI: autobuilds-grr-openapi
jobs:
  build-linux:
    runs-on: ubuntu-18.04
    env:
      GCS_TAG: ubuntu_64bit
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.6'
      - name: Set up
        run: |
          sudo apt install fakeroot debhelper libffi-dev libssl-dev
          pip install virtualenv
          virtualenv "${HOME}/INSTALL"
      - name: Build
        run: |
          travis/install_client_builder.sh
          travis/build_templates.sh
          ls -la gcs_upload_dir
      - name: Upload installers to GitHub artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ubuntu-installers
          path: gcs_upload_dir/
          retention-days: 1

  build-server-deb:
    runs-on: ubuntu-18.04
    env:
      GCS_TAG: server_deb
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.6'
      - name: Set up
        run: |
          sudo apt-get install -y fakeroot debhelper libffi-dev libssl-dev python3-dev python3-pip python3-venv wget openjdk-8-jdk zip git devscripts dh-systemd libmysqlclient-dev dh-virtualenv dh-make libc6-i386 lib32z1
          pip install --upgrade setuptools virtualenv
          virtualenv "${HOME}/INSTALL"
      - name: Build
        run: |
          travis/install.sh
          # travis/fetch_client_templates.sh
          travis/build_local_pyindex.sh
          travis/build_api_documentation.sh "${HOME}/generated_description/openapi_description.json" "${HOME}/generated_documentation/openapi_documentation.html"
          travis/build_server_deb.sh
          ls -la gcs_upload_dir

  build-osx:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.6'
      - name: Set up
        run: |
          pip install --upgrade setuptools virtualenv
          virtualenv "${HOME}/INSTALL"
      - name: Build installers
        run: |
          travis/install_client_builder.sh
          travis/build_templates.sh
          ls -la gcs_upload_dir
      - name: Upload installers to GitHub artifacts
        uses: actions/upload-artifact@v2
        with:
          name: macos-installers
          path: gcs_upload_dir/
          retention-days: 1

  build-ubuntu-docker:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - run: |
          export BRANCH=$(echo $GITHUB_REF | cut -d'/' -f 3)
          # TODO: Remove. Hardcoded for testing in a fork:
          export GITHUB_SHA=166794f9dfebca3cc8c1361ed7f31fb7962a87c1
          ./appveyor/docker_build/build_docker_image.sh

  build-centos:
    runs-on: ubuntu-18.04
    env:
      GCS_TAG: centos_64bit
      DOCKER_IMG: grrdocker/centos7
      DOCKER_CONTAINER: centos_64bit_container
      DOCKER_USER: grrbot
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.6'
      - name: Build installers
        run: |
          sudo docker run -dit \
            --volume "${PWD}:/mnt/grr" \
            --workdir /mnt/grr \
            --env DOCKER_USER="${DOCKER_USER}" \
            --env TRAVIS_OS_NAME="linux" \
            --name "${DOCKER_CONTAINER}" \
            "${DOCKER_IMG}"
          sudo docker exec "${DOCKER_CONTAINER}" travis/set_up_test_user.sh
          sudo docker exec --user "${DOCKER_USER}" "${DOCKER_CONTAINER}" /usr/local/bin/python3.6 -m venv "/home/${DOCKER_USER}/INSTALL"
          sudo docker exec --user "${DOCKER_USER}" "${DOCKER_CONTAINER}" travis/install_client_builder.sh
          sudo docker exec --user "${DOCKER_USER}" "${DOCKER_CONTAINER}" travis/build_templates.sh
          sudo docker exec "${DOCKER_CONTAINER}" rpm -vih gcs_upload_dir/*.rpm
          ls -la gcs_upload_dir
      - name: Upload installers to GitHub artifacts
        uses: actions/upload-artifact@v2
        with:
          name: centos-installers
          path: gcs_upload_dir/
          retention-days: 1

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.7'
      - name: Build installers
        shell: bash
        run: |
          pip install virtualenv
          # appveyor/windows_templates/install_for_build.bat
          python appveyor/windows_templates/build_windows_templates.py --python64_dir=${{ env.pythonLocation }} --grr_src=$GITHUB_WORKSPACE --output_dir=$GITHUB_WORKSPACE/output --test_repack_install
          python $GITHUB_WORKSPACE/appveyor/windows_templates/build_windows_templates.py  --python64_dir=${{ env.pythonLocation }} --build_msi --grr_src=$GITHUB_WORKSPACE --output_dir=$GITHUB_WORKSPACE/output_msi --test_repack_install
      - if: ${{ github.event_name == 'push' }}
        name: Upload installers to GitHub artifacts
        uses: actions/upload-artifact@v2
        with:
          name: windows-installers
          path: deploy/
          retention-days: 1

